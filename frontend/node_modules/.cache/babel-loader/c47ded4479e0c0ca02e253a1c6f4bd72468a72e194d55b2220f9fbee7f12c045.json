{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rache\\\\react-projects\\\\smart-task-and-habit-tracker\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\DashBoard.js\",\n  _s = $RefreshSig$();\n// Dashboard.js\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  var _newTask$title, _newTask$description, _newTask$scheduledTim, _newTask$status;\n  const [username, setUsername] = useState(\"\");\n  const [userId, setUserId] = useState(null);\n  const [startHour, setStartHour] = useState(6);\n  const [endHour, setEndHour] = useState(23);\n  const [showTasks, setShowTasks] = useState(false);\n  const [showHabits, setShowHabits] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [habits, setHabits] = useState([]);\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [editingHabitId, setEditingHabitId] = useState(null);\n  const [background, setBackground] = useState(\"light\");\n  const [showTaskForm, setShowTaskForm] = useState(false);\n  const [newTask, setNewTask] = useState({\n    title: \"\",\n    description: \"\",\n    scheduledTime: \"\",\n    status: \"\"\n  });\n  const [showHabitForm, setShowHabitForm] = useState(false);\n  const [newHabit, setNewHabit] = useState({\n    title: \"\",\n    description: \"\",\n    frequency: \"\",\n    preferredTime: \"\"\n  });\n  const [showHourForm, setShowHourForm] = useState(false);\n  const navigate = useNavigate();\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n  const onDragEnd = result => {\n    if (!result.destination) return;\n    const reordered = reorder(tasks, result.source.index, result.destination.index);\n    setTasks(reordered);\n  };\n  const handleAddTask = async () => {\n    try {\n      const url = editingTaskId ? `http://localhost:8080/api/tasks/${editingTaskId}` : `http://localhost:8080/api/tasks/user/${userId}`;\n      const method = editingTaskId ? \"PUT\" : \"POST\";\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(url, {\n        method: method,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          ...newTask,\n          userId\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to save task\");\n      const saved = await response.json();\n      if (editingTaskId) {\n        setTasks(prev => prev.map(t => t.id === saved.id ? saved : t));\n      } else {\n        setTasks([...tasks, saved]);\n      }\n\n      // Track if it's scheduled\n      if (saved.scheduledTime) {\n        const scheduled = JSON.parse(localStorage.getItem(\"scheduledItems\") || \"[]\");\n        const exists = scheduled.some(item => item.id === String(saved.id));\n        if (!exists) {\n          scheduled.push({\n            id: String(saved.id),\n            type: \"task\",\n            scheduledAt: new Date().toISOString()\n          });\n          localStorage.setItem(\"scheduledItems\", JSON.stringify(scheduled));\n          window.dispatchEvent(new Event(\"storage-updated\"));\n        }\n      }\n\n      // Track if it's completed\n      if (saved.status === \"Done\") {\n        const completions = JSON.parse(localStorage.getItem(\"taskCompletions\") || \"[]\");\n        const already = completions.some(entry => entry.taskId === saved.id);\n        if (!already) {\n          completions.push({\n            taskId: saved.id,\n            completedAt: new Date().toISOString()\n          });\n          localStorage.setItem(\"taskCompletions\", JSON.stringify(completions));\n          window.dispatchEvent(new Event(\"storage-updated\"));\n        }\n      }\n\n      // Reset form\n      setNewTask({\n        title: \"\",\n        description: \"\",\n        scheduledTime: \"\",\n        status: \"\"\n      });\n      setEditingTaskId(null);\n      setShowTaskForm(false);\n    } catch (err) {\n      console.error(\"Error saving task:\", err);\n    }\n  };\n  const incompleteTasks = tasks.filter(task => task.status !== \"Done\");\n  const completedTasks = tasks.filter(task => task.status === \"Done\");\n  const sortedTasks = [...incompleteTasks, ...completedTasks];\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"username\");\n    const storedUserId = localStorage.getItem(\"userId\");\n    if (storedUsername) setUsername(storedUsername);\n    if (storedUserId) {\n      const parsedId = Number(storedUserId);\n      if (!isNaN(parsedId)) {\n        setUserId(parsedId);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        var _data$startHour, _data$endHour;\n        const res = await fetch(`http://localhost:8080/api/users/${userId}`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        const data = await res.json();\n        const safeStart = (_data$startHour = data.startHour) !== null && _data$startHour !== void 0 ? _data$startHour : 6;\n        const safeEnd = (_data$endHour = data.endHour) !== null && _data$endHour !== void 0 ? _data$endHour : 23;\n        localStorage.setItem(\"startHour\", safeStart);\n        localStorage.setItem(\"endHour\", safeEnd);\n        setStartHour(safeStart);\n        setEndHour(safeEnd);\n        setUsername(data.username);\n      } catch (err) {\n        console.error(\"Failed to fetch user\", err);\n      }\n    };\n    if (userId) fetchUser();\n  }, [userId]);\n  useEffect(() => {\n    if (!userId) return;\n    fetch(`http://localhost:8080/api/users/${userId}`, {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(res => res.json()).then(async userData => {\n      // Optionally reset state\n      setTasks([]);\n      setHabits([]);\n\n      // Fetch full task objects\n      const taskDetails = await Promise.all((userData.taskIds || []).map(id => fetch(`http://localhost:8080/api/tasks/${id}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      }).then(res => res.json())));\n      setTasks(taskDetails);\n      const scheduled = JSON.parse(localStorage.getItem(\"scheduledItems\") || \"[]\");\n      const now = new Date().toISOString();\n      let changed = false;\n      taskDetails.forEach(task => {\n        if (task.scheduledTime) {\n          const exists = scheduled.some(item => item.id === String(task.id));\n          if (!exists) {\n            scheduled.push({\n              id: String(task.id),\n              type: \"task\",\n              scheduledAt: now\n            });\n            changed = true;\n          }\n        }\n      });\n      if (changed) {\n        localStorage.setItem(\"scheduledItems\", JSON.stringify(scheduled));\n        window.dispatchEvent(new Event(\"storage-updated\"));\n      }\n\n      // Fetch full habit objects\n      const habitDetails = await Promise.all((userData.habitIds || []).map(id => fetch(`http://localhost:8080/api/habits/${id}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      }).then(res => res.json())));\n      setHabits(habitDetails);\n    }).catch(err => console.error(\"Error fetching user/tasks/habits:\", err));\n  }, [userId]);\n  const handleLogout = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"userId\");\n    navigate(\"/\");\n  };\n  const toggleTaskStatus = async (taskId, currentStatus) => {\n    const newStatus = currentStatus === \"Done\" ? \"In Progress\" : \"Done\";\n    try {\n      const response = await fetch(`http://localhost:8080/api/tasks/${taskId}/status`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          status: newStatus\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to update task status\");\n      }\n      const updated = await response.json();\n\n      // Update frontend state\n      setTasks(prev => prev.map(task => task.id === updated.id ? updated : task));\n\n      // Schedule count tracking\n      if (updated.scheduledTime) {\n        const scheduled = JSON.parse(localStorage.getItem(\"scheduledItems\") || \"[]\");\n        const exists = scheduled.some(item => item.id === String(updated.id));\n        if (!exists) {\n          scheduled.push({\n            id: String(updated.id),\n            type: \"task\",\n            scheduledAt: new Date().toISOString()\n          });\n          localStorage.setItem(\"scheduledItems\", JSON.stringify(scheduled));\n          window.dispatchEvent(new Event(\"storage-updated\"));\n        }\n      }\n\n      // Completion tracking\n      const completions = JSON.parse(localStorage.getItem(\"taskCompletions\") || \"[]\");\n      const already = completions.some(entry => entry.taskId === updated.id);\n      if (newStatus === \"Done\" && updated.scheduledTime && !already) {\n        completions.push({\n          taskId: updated.id,\n          completedAt: new Date().toISOString()\n        });\n        localStorage.setItem(\"taskCompletions\", JSON.stringify(completions));\n        window.dispatchEvent(new Event(\"storage-updated\"));\n      }\n      if (newStatus !== \"Done\" && already) {\n        const cleaned = completions.filter(entry => entry.taskId !== updated.id);\n        localStorage.setItem(\"taskCompletions\", JSON.stringify(cleaned));\n        window.dispatchEvent(new Event(\"storage-updated\"));\n      }\n    } catch (error) {\n      console.error(\"Error toggling task status:\", error);\n      alert(\"Failed to update task status. Please try again.\");\n    }\n  };\n  const handleAddHabit = async () => {\n    try {\n      // const url = editingHabitId\n      //   ? `http://localhost:8080/api/habits/${editingHabitId}`\n      //   : `http://localhost:8080/api/habits/user/${userId}`;\n      const url = editingHabitId ? `http://localhost:8080/api/habits/${editingHabitId}` : `http://localhost:8080/api/habits`;\n      const method = editingHabitId ? \"PUT\" : \"POST\";\n\n      // const response = await fetch(url, {\n      //   method,\n      //   headers: { \"Content-Type\": \"application/json\" },\n      //   body: JSON.stringify({ ...newHabit, userId })\n      // });\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(url, {\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          ...newHabit,\n          userId,\n          status: \"Active\" // optional, set default if not already included\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to save habit\");\n      const saved = await response.json();\n      if (editingHabitId) {\n        setHabits(prev => prev.map(h => h.id === saved.id ? saved : h));\n      } else {\n        setHabits([...habits, saved]);\n      }\n      setNewHabit({\n        title: \"\",\n        description: \"\",\n        frequency: \"\",\n        preferredTime: \"\"\n      });\n      setEditingHabitId(null);\n      setShowHabitForm(false);\n    } catch (err) {\n      console.error(\"Error saving habit:\", err);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      const res = await fetch(`http://localhost:8080/api/tasks/${taskId}`, {\n        method: \"DELETE\",\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      if (!res.ok) throw new Error(\"Failed to delete task\");\n      setTasks(tasks.filter(t => t.id !== taskId));\n    } catch (err) {\n      console.error(\"Delete error:\", err);\n    }\n  };\n  const handleEditTask = task => {\n    setNewTask(task);\n    setEditingTaskId(task.id);\n    setShowTaskForm(true);\n  };\n  const handleEditHabit = habit => {\n    setNewHabit(habit);\n    setEditingHabitId(habit.id);\n    setShowHabitForm(true);\n  };\n  const handleDeleteHabit = async habitId => {\n    try {\n      const res = await fetch(`http://localhost:8080/api/habits/${habitId}`, {\n        method: \"DELETE\",\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      if (!res.ok) throw new Error(\"Failed to delete habit\");\n      setHabits(habits.filter(h => h.id !== habitId));\n    } catch (err) {\n      console.error(\"Delete error:\", err);\n    }\n  };\n  const [hourErrors, setHourErrors] = useState({});\n  const handleUpdateHours = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem(\"token\");\n      const res = await fetch(\"http://localhost:8080/api/users/update-hours\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          userId,\n          startHour,\n          endHour\n        })\n      });\n      if (res.ok) {\n        localStorage.setItem(\"startHour\", startHour);\n        localStorage.setItem(\"endHour\", endHour);\n        setShowHourForm(false);\n        alert(\"Planner hours updated!\");\n        setHourErrors({});\n      } else if (res.status === 400) {\n        const errors = await res.json();\n        setHourErrors(errors); // capture validation errors\n      } else {\n        alert(\"Update failed\");\n      }\n    } catch (err) {\n      console.error(\"Failed to update hours\", err);\n      alert(\"Update failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dashboard-container ${background}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Welcome, \", username, \" \\uD83D\\uDC4B\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planner-subrow\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"planner-text\",\n            children: [\"Your planner runs from \", startHour, \":00 to \", endHour, \":00\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowHourForm(!showHourForm),\n            className: \"toggle-button small\",\n            children: showHourForm ? \"Cancel\" : \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 9\n        }, this), showHourForm && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleUpdateHours,\n          className: \"hour-update-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Start:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: startHour,\n              min: 0,\n              max: 23,\n              onChange: e => setStartHour(Number(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"End:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: endHour,\n              min: 0,\n              max: 23,\n              onChange: e => setEndHour(Number(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this), hourErrors.endHour && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"validation-error\",\n              children: hourErrors.endHour\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-button\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Let's achieve some goals! \\uD83C\\uDFAF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowTasks(!showTasks),\n        className: \"toggle-button\",\n        children: \"\\uD83D\\uDCCB My Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this), showTasks && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowTaskForm(!showTaskForm),\n          className: \"add-button\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n          onDragEnd: onDragEnd,\n          children: /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"task-list\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              children: [sortedTasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: String(task.id),\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"task-item\",\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"task-content\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      checked: task.status === \"Done\",\n                      onChange: () => toggleTaskStatus(task.id, task.status)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 454,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `task-details ${task.status === \"Done\" ? \"task-done\" : \"\"}`,\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: task.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 460,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 460,\n                        columnNumber: 62\n                      }, this), task.description, \" \\u2013 \", task.scheduledTime, \" \\u2013 \", /*#__PURE__*/_jsxDEV(\"em\", {\n                        children: task.status\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 461,\n                        columnNumber: 77\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 459,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"task-actions\",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"edit-button\",\n                        onClick: () => handleEditTask(task),\n                        children: \"\\uD83D\\uDD8A\\uFE0F\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 464,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"delete-button\",\n                        onClick: () => handleDeleteTask(task.id),\n                        children: \"\\uD83D\\uDDD1\\uFE0F\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 465,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 463,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 27\n                }, this)\n              }, task.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 23\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this), showTaskForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-popup-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Title\",\n            value: (_newTask$title = newTask.title) !== null && _newTask$title !== void 0 ? _newTask$title : \"\",\n            onChange: e => setNewTask({\n              ...newTask,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Description\",\n            value: (_newTask$description = newTask.description) !== null && _newTask$description !== void 0 ? _newTask$description : \"\",\n            onChange: e => setNewTask({\n              ...newTask,\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Time to do\",\n            value: (_newTask$scheduledTim = newTask.scheduledTime) !== null && _newTask$scheduledTim !== void 0 ? _newTask$scheduledTim : \"\",\n            onChange: e => setNewTask({\n              ...newTask,\n              scheduledTime: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Status\",\n            value: (_newTask$status = newTask.status) !== null && _newTask$status !== void 0 ? _newTask$status : \"\",\n            onChange: e => setNewTask({\n              ...newTask,\n              status: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddTask,\n            className: \"bg-toggle\",\n            children: editingTaskId ? \"Update Task\" : \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowTaskForm(false),\n            className: \"logout-button\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowHabits(!showHabits),\n        className: \"toggle-button\",\n        children: \"\\uD83D\\uDCAA My Habits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this), showHabits && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowHabitForm(!showHabitForm),\n          className: \"add-button\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: habits.length > 0 ? habits.map((habit, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"task-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: habit.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 53\n                }, this), habit.description, \" \\u2013 \", /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: habit.frequency\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 45\n                }, this), \" \\u2013 \", habit.preferredTime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"edit-button\",\n                  onClick: () => handleEditHabit(habit),\n                  children: \"\\uD83D\\uDD8A\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-button\",\n                  onClick: () => handleDeleteHabit(habit.id),\n                  children: \"\\uD83D\\uDDD1\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No habits yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 11\n      }, this), showHabitForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-popup-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Title\",\n            value: newHabit.title,\n            onChange: e => setNewHabit({\n              ...newHabit,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Description\",\n            value: newHabit.description,\n            onChange: e => setNewHabit({\n              ...newHabit,\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Frequency\",\n            value: newHabit.frequency,\n            onChange: e => setNewHabit({\n              ...newHabit,\n              frequency: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Preferred Time (e.g. morning, 08:00)\",\n            value: newHabit.preferredTime,\n            onChange: e => setNewHabit({\n              ...newHabit,\n              preferredTime: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddHabit,\n            className: \"bg-toggle\",\n            children: [\" \", editingHabitId ? \"Update Habit\" : \"Add Habit\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowHabitForm(false),\n            className: \"logout-button\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/schedule\", {\n          state: {\n            tasks,\n            habits\n          }\n        }),\n        className: \"toggle-button\",\n        children: \"\\uD83D\\uDCC5 Let's Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Debug:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User ID: \", userId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Tasks Count: \", tasks.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Habits Count: \", habits.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 379,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"tHVwkW9GQeIcGY27RWs2ivMXMoY=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useState","useNavigate","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Dashboard","_s","_newTask$title","_newTask$description","_newTask$scheduledTim","_newTask$status","username","setUsername","userId","setUserId","startHour","setStartHour","endHour","setEndHour","showTasks","setShowTasks","showHabits","setShowHabits","tasks","setTasks","habits","setHabits","editingTaskId","setEditingTaskId","editingHabitId","setEditingHabitId","background","setBackground","showTaskForm","setShowTaskForm","newTask","setNewTask","title","description","scheduledTime","status","showHabitForm","setShowHabitForm","newHabit","setNewHabit","frequency","preferredTime","showHourForm","setShowHourForm","navigate","reorder","list","startIndex","endIndex","result","Array","from","removed","splice","onDragEnd","destination","reordered","source","index","handleAddTask","url","method","token","localStorage","getItem","response","fetch","headers","body","JSON","stringify","ok","Error","saved","json","prev","map","t","id","scheduled","parse","exists","some","item","String","push","type","scheduledAt","Date","toISOString","setItem","window","dispatchEvent","Event","completions","already","entry","taskId","completedAt","err","console","error","incompleteTasks","filter","task","completedTasks","sortedTasks","storedUsername","storedUserId","parsedId","Number","isNaN","fetchUser","_data$startHour","_data$endHour","res","data","safeStart","safeEnd","then","userData","taskDetails","Promise","all","taskIds","now","changed","forEach","habitDetails","habitIds","catch","handleLogout","removeItem","toggleTaskStatus","currentStatus","newStatus","updated","cleaned","alert","handleAddHabit","h","handleDeleteTask","handleEditTask","handleEditHabit","habit","handleDeleteHabit","habitId","hourErrors","setHourErrors","handleUpdateHours","e","preventDefault","errors","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","value","min","max","onChange","target","droppableId","provided","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","checked","placeholder","length","state","_c","$RefreshReg$"],"sources":["C:/Users/rache/react-projects/smart-task-and-habit-tracker/frontend/src/components/Dashboard/DashBoard.js"],"sourcesContent":["// Dashboard.js\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\nimport \"./Dashboard.css\";\n\nexport default function Dashboard() {\n  const [username, setUsername] = useState(\"\");\n  const [userId, setUserId] = useState(null);\n  const [startHour, setStartHour] = useState(6);\n  const [endHour, setEndHour] = useState(23);\n\n  const [showTasks, setShowTasks] = useState(false);\n  const [showHabits, setShowHabits] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [habits, setHabits] = useState([]);\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [editingHabitId, setEditingHabitId] = useState(null);\n\n  const [background, setBackground] = useState(\"light\");\n\n  const [showTaskForm, setShowTaskForm] = useState(false);\n  const [newTask, setNewTask] = useState({ title: \"\", description: \"\", scheduledTime: \"\", status: \"\"});\n\n  const [showHabitForm, setShowHabitForm] = useState(false);\n  const [newHabit, setNewHabit] = useState({ title: \"\", description: \"\", frequency: \"\" , preferredTime: \"\"});\n\n  const [showHourForm, setShowHourForm] = useState(false);\n\n  const navigate = useNavigate();\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  const onDragEnd = (result) => {\n    if (!result.destination) return;\n    const reordered = reorder(tasks, result.source.index, result.destination.index);\n    setTasks(reordered);\n  };\n\n  const handleAddTask = async () => {\n    try {\n      const url = editingTaskId\n        ? `http://localhost:8080/api/tasks/${editingTaskId}`\n        : `http://localhost:8080/api/tasks/user/${userId}`;\n\n      const method = editingTaskId ? \"PUT\" : \"POST\";\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(url, {\n        method: method,\n        headers: { \"Content-Type\": \"application/json\",\n                    'Authorization': `Bearer ${token}`\n                  },\n        body: JSON.stringify({ ...newTask, userId })\n      });\n\n      if (!response.ok) throw new Error(\"Failed to save task\");\n\n      const saved = await response.json();\n\n      if (editingTaskId) {\n        setTasks(prev => prev.map(t => t.id === saved.id ? saved : t));\n      } else {\n        setTasks([...tasks, saved]);\n      }\n\n      // Track if it's scheduled\n      if (saved.scheduledTime) {\n        const scheduled = JSON.parse(localStorage.getItem(\"scheduledItems\") || \"[]\");\n        const exists = scheduled.some(item => item.id === String(saved.id));\n        if (!exists) {\n          scheduled.push({ id: String(saved.id), type: \"task\", scheduledAt: new Date().toISOString() });\n          localStorage.setItem(\"scheduledItems\", JSON.stringify(scheduled));\n          window.dispatchEvent(new Event(\"storage-updated\"));\n        }\n      }\n\n      // Track if it's completed\n      if (saved.status === \"Done\") {\n        const completions = JSON.parse(localStorage.getItem(\"taskCompletions\") || \"[]\");\n        const already = completions.some(entry => entry.taskId === saved.id);\n        if (!already) {\n          completions.push({ taskId: saved.id, completedAt: new Date().toISOString() });\n          localStorage.setItem(\"taskCompletions\", JSON.stringify(completions));\n          window.dispatchEvent(new Event(\"storage-updated\"));\n        }\n      }\n\n      // Reset form\n      setNewTask({ title: \"\", description: \"\", scheduledTime: \"\", status: \"\" });\n      setEditingTaskId(null);\n      setShowTaskForm(false);\n    } catch (err) {\n      console.error(\"Error saving task:\", err);\n    }\n  };\n\n  const incompleteTasks = tasks.filter(task => task.status !== \"Done\");\n  const completedTasks = tasks.filter(task => task.status === \"Done\");\n  const sortedTasks = [...incompleteTasks, ...completedTasks];\n\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"username\");\n    const storedUserId = localStorage.getItem(\"userId\");\n\n    if (storedUsername) setUsername(storedUsername);\n    if (storedUserId) {\n      const parsedId = Number(storedUserId);\n      if (!isNaN(parsedId)) {\n        setUserId(parsedId);\n      }\n    }\n  }, []);\n\nuseEffect(() => {\n  const fetchUser = async () => {\n    try {\n      const res = await fetch(`http://localhost:8080/api/users/${userId}`, {\n        headers: { 'Authorization': `Bearer ${localStorage.getItem(\"token\")}` }\n      });\n      const data = await res.json();\n\n      const safeStart = data.startHour ?? 6;\n      const safeEnd = data.endHour ?? 23;\n\n      localStorage.setItem(\"startHour\", safeStart);\n      localStorage.setItem(\"endHour\", safeEnd);\n\n      setStartHour(safeStart);\n      setEndHour(safeEnd);\n      setUsername(data.username);\n    } catch (err) {\n      console.error(\"Failed to fetch user\", err);\n    }\n  };\n\n  if (userId) fetchUser();\n}, [userId]);\n\n  useEffect(() => {\n    if (!userId) return;\n\n    fetch(`http://localhost:8080/api/users/${userId}` ,{\n        headers: { 'Authorization': `Bearer ${localStorage.getItem(\"token\")}` }\n      })\n      .then(res => res.json())\n      .then(async (userData) => {\n        // Optionally reset state\n        setTasks([]);\n        setHabits([]);\n\n        // Fetch full task objects\n        const taskDetails = await Promise.all(\n          (userData.taskIds || []).map(id =>\n            fetch(`http://localhost:8080/api/tasks/${id}`, {\n              headers: { 'Authorization': `Bearer ${localStorage.getItem(\"token\")}` }\n            })\n            .then(res => res.json())\n          )\n        );\n        setTasks(taskDetails);\n        \n        const scheduled = JSON.parse(localStorage.getItem(\"scheduledItems\") || \"[]\");\n        const now = new Date().toISOString();\n        let changed = false;\n\n        taskDetails.forEach(task => {\n          if (task.scheduledTime) {\n            const exists = scheduled.some(item => item.id === String(task.id));\n            if (!exists) {\n              scheduled.push({ id: String(task.id), type: \"task\", scheduledAt: now });\n              changed = true;\n            }\n          }\n        });\n\n        if (changed) {\n          localStorage.setItem(\"scheduledItems\", JSON.stringify(scheduled));\n          window.dispatchEvent(new Event(\"storage-updated\"));\n        }\n\n        // Fetch full habit objects\n        const habitDetails = await Promise.all(\n          (userData.habitIds || []).map(id =>\n            fetch(`http://localhost:8080/api/habits/${id}`, {\n              headers: { 'Authorization': `Bearer ${localStorage.getItem(\"token\")}` }\n            })\n            .then(res => res.json())\n          )\n        );\n        setHabits(habitDetails);\n      })\n      .catch(err => console.error(\"Error fetching user/tasks/habits:\", err));\n  }, [userId]);\n\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"userId\");\n    navigate(\"/\");\n  };\n\n  const toggleTaskStatus = async (taskId, currentStatus) => {\n    const newStatus = currentStatus === \"Done\" ? \"In Progress\" : \"Done\";\n\n    try {\n      const response = await fetch(`http://localhost:8080/api/tasks/${taskId}/status`, {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n                },\n        body: JSON.stringify({ status: newStatus })\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to update task status\");\n      }\n\n      const updated = await response.json();\n\n      // Update frontend state\n      setTasks(prev => prev.map(task => task.id === updated.id ? updated : task));\n\n      // Schedule count tracking\n      if (updated.scheduledTime) {\n        const scheduled = JSON.parse(localStorage.getItem(\"scheduledItems\") || \"[]\");\n        const exists = scheduled.some(item => item.id === String(updated.id));\n        if (!exists) {\n          scheduled.push({ id: String(updated.id), type: \"task\", scheduledAt: new Date().toISOString() });\n          localStorage.setItem(\"scheduledItems\", JSON.stringify(scheduled));\n          window.dispatchEvent(new Event(\"storage-updated\"));\n        }\n      }\n\n      // Completion tracking\n      const completions = JSON.parse(localStorage.getItem(\"taskCompletions\") || \"[]\");\n      const already = completions.some(entry => entry.taskId === updated.id);\n\n      if (newStatus === \"Done\" && updated.scheduledTime && !already) {\n        completions.push({ taskId: updated.id, completedAt: new Date().toISOString() });\n        localStorage.setItem(\"taskCompletions\", JSON.stringify(completions));\n        window.dispatchEvent(new Event(\"storage-updated\"));\n      }\n\n      if (newStatus !== \"Done\" && already) {\n        const cleaned = completions.filter(entry => entry.taskId !== updated.id);\n        localStorage.setItem(\"taskCompletions\", JSON.stringify(cleaned));\n        window.dispatchEvent(new Event(\"storage-updated\"));\n      }\n\n    } catch (error) {\n      console.error(\"Error toggling task status:\", error);\n      alert(\"Failed to update task status. Please try again.\");\n    }\n  };\n\n\n  const handleAddHabit = async () => {\n    try {\n      // const url = editingHabitId\n      //   ? `http://localhost:8080/api/habits/${editingHabitId}`\n      //   : `http://localhost:8080/api/habits/user/${userId}`;\n      const url = editingHabitId\n        ? `http://localhost:8080/api/habits/${editingHabitId}`\n        : `http://localhost:8080/api/habits`;\n\n      const method = editingHabitId ? \"PUT\" : \"POST\";\n\n      // const response = await fetch(url, {\n      //   method,\n      //   headers: { \"Content-Type\": \"application/json\" },\n      //   body: JSON.stringify({ ...newHabit, userId })\n      // });\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(url, {\n        method,\n        headers: { \"Content-Type\": \"application/json\",\n                       'Authorization': `Bearer ${token}`},\n        body: JSON.stringify({\n          ...newHabit,\n          userId,\n          status: \"Active\" // optional, set default if not already included\n        }),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to save habit\");\n\n      const saved = await response.json();\n\n      if (editingHabitId) {\n        setHabits(prev => prev.map(h => h.id === saved.id ? saved : h));\n      } else {\n        setHabits([...habits, saved]);\n      }\n\n      setNewHabit({ title: \"\", description: \"\", frequency: \"\" , preferredTime: \"\"});\n      setEditingHabitId(null);\n      setShowHabitForm(false);\n    } catch (err) {\n      console.error(\"Error saving habit:\", err);\n    }\n  };\n\n  const handleDeleteTask = async (taskId) => {\n    try {\n      const res = await fetch(`http://localhost:8080/api/tasks/${taskId}`, {\n        method: \"DELETE\",\n        headers: { 'Authorization': `Bearer ${localStorage.getItem(\"token\")}` }\n      });\n      if (!res.ok) throw new Error(\"Failed to delete task\");\n      setTasks(tasks.filter(t => t.id !== taskId));\n    } catch (err) {\n      console.error(\"Delete error:\", err);\n    }\n  };\n\n  const handleEditTask = (task) => {\n    setNewTask(task);\n    setEditingTaskId(task.id);\n    setShowTaskForm(true);\n  };\n\n  const handleEditHabit = (habit) => {\n    setNewHabit(habit);\n    setEditingHabitId(habit.id);\n    setShowHabitForm(true);\n  };\n\n  const handleDeleteHabit = async (habitId) => {\n    try {\n      const res = await fetch(`http://localhost:8080/api/habits/${habitId}`, {\n        method: \"DELETE\",\n        headers: { 'Authorization': `Bearer ${localStorage.getItem(\"token\")}` }\n      });\n      if (!res.ok) throw new Error(\"Failed to delete habit\");\n\n      setHabits(habits.filter(h => h.id !== habitId));\n    } catch (err) {\n      console.error(\"Delete error:\", err);\n    }\n  };\n\n  const [hourErrors, setHourErrors] = useState({});\n  const handleUpdateHours = async (e) => {\n  e.preventDefault();\n  try {\n    const token = localStorage.getItem(\"token\");\n    const res = await fetch(\"http://localhost:8080/api/users/update-hours\", {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" ,\n                  'Authorization': `Bearer ${token}`\n                },\n      body: JSON.stringify({ userId, startHour, endHour })\n    });\n\n    if (res.ok) {\n      localStorage.setItem(\"startHour\", startHour);\n      localStorage.setItem(\"endHour\", endHour);\n      setShowHourForm(false);\n      alert(\"Planner hours updated!\");\n      setHourErrors({});\n    } else if (res.status === 400) {\n      const errors = await res.json();\n      setHourErrors(errors); // capture validation errors\n    } else {\n      alert(\"Update failed\");\n    }\n  } catch (err) {\n    console.error(\"Failed to update hours\", err);\n    alert(\"Update failed\");\n  }\n};\n\n  return (\n    <div className={`dashboard-container ${background}`}>\n      <header className=\"dashboard-header\">\n      <div className=\"header-left\">\n        <h2>Welcome, {username} 👋</h2>\n\n        <div className=\"planner-subrow\">\n          <span className=\"planner-text\">\n            Your planner runs from {startHour}:00 to {endHour}:00\n          </span>\n          <button\n            onClick={() => setShowHourForm(!showHourForm)}\n            className=\"toggle-button small\"\n          >\n            {showHourForm ? \"Cancel\" : \"Update\"}\n          </button>\n        </div>\n\n        {showHourForm && (\n          <form onSubmit={handleUpdateHours} className=\"hour-update-form\">\n            <label>\n              Start:\n              <input\n                type=\"number\"\n                value={startHour}\n                min={0}\n                max={23}\n                onChange={(e) => setStartHour(Number(e.target.value))}\n              />\n            </label>\n            <label>\n              End:\n              <input\n                type=\"number\"\n                value={endHour}\n                min={0}\n                max={23}\n                onChange={(e) => setEndHour(Number(e.target.value))}\n              />\n              {hourErrors.endHour && (\n                <p className=\"validation-error\">{hourErrors.endHour}</p>\n              )}\n            </label>\n            <button type=\"submit\">Save</button>\n          </form>\n        )}\n      </div>\n\n      <div className=\"header-right\">\n        <button onClick={handleLogout} className=\"logout-button\">Logout</button>\n      </div>\n    </header>\n\n      <main>\n        <h1>Let's achieve some goals! 🎯</h1>\n\n        <button onClick={() => setShowTasks(!showTasks)} className=\"toggle-button\">\n          📋 My Tasks\n        </button>\n        {showTasks && (\n          <div className=\"task-section\">\n            <button onClick={() => setShowTaskForm(!showTaskForm)} className=\"add-button\">+</button>\n            <DragDropContext onDragEnd={onDragEnd}>\n              <Droppable droppableId=\"task-list\">\n                {(provided) => (\n                  <ul {...provided.droppableProps} ref={provided.innerRef}>\n                    {sortedTasks.map((task, index) => (\n                      <Draggable key={task.id} draggableId={String(task.id)} index={index}>\n                        {(provided) => (\n                          <li\n                            className=\"task-item\"\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                          >\n                            <div className=\"task-content\">\n                              <input\n                                type=\"checkbox\"\n                                checked={task.status === \"Done\"}\n                                onChange={() => toggleTaskStatus(task.id, task.status)}\n                              />\n                              <div className={`task-details ${task.status === \"Done\" ? \"task-done\" : \"\"}`}>\n                                <strong>{task.title}</strong><br />\n                                {task.description} – {task.scheduledTime} – <em>{task.status}</em>\n                              </div>\n                              <div className=\"task-actions\">\n                                <button className=\"edit-button\" onClick={() => handleEditTask(task)}>🖊️</button>\n                                <button className=\"delete-button\" onClick={() => handleDeleteTask(task.id)}>🗑️</button>\n                              </div>\n                            </div>\n                          </li>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </ul>\n                )}\n              </Droppable>\n            </DragDropContext>\n          </div>\n        )}\n\n        {showTaskForm && (\n          <div className=\"form-popup-overlay\">\n            <div className=\"form-popup\">\n              <input\n                type=\"text\"\n                placeholder=\"Title\"\n                value={newTask.title ?? \"\"}\n                onChange={e => setNewTask({ ...newTask, title: e.target.value })}\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Description\"\n                value={newTask.description ?? \"\"}\n                onChange={e => setNewTask({ ...newTask, description: e.target.value })}\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Time to do\"\n                value={newTask.scheduledTime ?? \"\"}\n                onChange={e => setNewTask({ ...newTask, scheduledTime: e.target.value })}\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Status\"\n                value={newTask.status ?? \"\"}\n                onChange={e => setNewTask({ ...newTask, status: e.target.value })}\n              />\n              <button onClick={handleAddTask} className=\"bg-toggle\">{editingTaskId ? \"Update Task\" : \"Add Task\"}</button>\n              <button onClick={() => setShowTaskForm(false)} className=\"logout-button\">Close</button>\n            </div>\n          </div>\n        )}\n\n        <button onClick={() => setShowHabits(!showHabits)} className=\"toggle-button\">\n          💪 My Habits\n        </button>\n        {showHabits && (\n          <div className=\"task-section\">\n            <button onClick={() => setShowHabitForm(!showHabitForm)} className=\"add-button\">+</button>\n            <ul>\n              {habits.length > 0 ? habits.map((habit, index) =>\n                <li key={index} className=\"task-item\">\n                  <div className=\"task-content\">\n                    <div className=\"task-details\">\n                      <strong>{habit.title}</strong><br />\n                      {habit.description} – <em>{habit.frequency}</em> – {habit.preferredTime}\n                    </div>\n                    <div className=\"task-actions\">\n                      <button className=\"edit-button\" onClick={() => handleEditHabit(habit)}>🖊️</button>\n                      <button className=\"delete-button\" onClick={() => handleDeleteHabit(habit.id)}>🗑️</button>\n                    </div>\n                  </div>\n                </li>\n                ) : <li>No habits yet</li>}\n            </ul>\n          </div>\n        )}\n\n        {showHabitForm && (\n          <div className=\"form-popup-overlay\">\n            <div className=\"form-popup\">\n              <input type=\"text\" placeholder=\"Title\" value={newHabit.title} onChange={e => setNewHabit({ ...newHabit, title: e.target.value })} />\n              <input type=\"text\" placeholder=\"Description\" value={newHabit.description} onChange={e => setNewHabit({ ...newHabit, description: e.target.value })} />\n              <input type=\"text\" placeholder=\"Frequency\" value={newHabit.frequency} onChange={e => setNewHabit({ ...newHabit, frequency: e.target.value })} />\n              <input type=\"text\" placeholder=\"Preferred Time (e.g. morning, 08:00)\" value={newHabit.preferredTime} onChange={e => setNewHabit({...newHabit, preferredTime: e.target.value})} />\n              <button onClick={handleAddHabit} className=\"bg-toggle\"> {editingHabitId ? \"Update Habit\" : \"Add Habit\"}</button>\n              <button onClick={() => setShowHabitForm(false)} className=\"logout-button\">Close</button>\n            </div>\n          </div>\n        )}\n        <button\n          onClick={() => navigate(\"/schedule\", { state: { tasks, habits } })}\n          className=\"toggle-button\"\n        >\n          📅 Let's Schedule\n        </button>\n        <br />\n        <div>\n          <h3>Debug:</h3>\n          <p>User ID: {userId}</p>\n          <p>Tasks Count: {tasks.length}</p>\n          <p>Habits Count: {habits.length}</p>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}